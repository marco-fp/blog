{
    "version": "https://jsonfeed.org/version/1",
    "title": "undefined-thought",
    "description": "",
    "home_page_url": "https://marco-fp.github.io/blog",
    "feed_url": "https://marco-fp.github.io/blog/feed.json",
    "user_comment": "",
    "author": {
        "name": "Marco Fernandez Pranno"
    },
    "items": [
        {
            "id": "https://marco-fp.github.io/blog/setting-up-android-studio-for-react-native.html",
            "url": "https://marco-fp.github.io/blog/setting-up-android-studio-for-react-native.html",
            "title": "Setting up Android Studio for React Native",
            "content_html": "<p>In this post we'll cover the basics to setup a React Native development environment using Android Studio.</p>\n<p><strong>1.</strong> Install Git:&nbsp;</p>\n<ul>\n<li>Windows:&nbsp;<a href=\"https://git-for-windows.github.io/\">Git for Windows</a>. <br>During the installation use the option \"Run Git from Windows Command Prompt\"</li>\n<li>Linux: <a href=\"https://git-scm.com/download/linux\">Using your package manager</a></li>\n<li>MacOS: If you have installed XCode, you already have git. <br>In other case, use: <code>$&gt; brew install git</code></li>\n</ul>\n<p><strong>2.</strong> Install latest Android SDK:</p>\n<ul>\n<li>Download and install the latest <a href=\"http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html\">JDK</a></li>\n<li>Download and install the latest Android SDK\n<ul>\n<li><a href=\"https://developer.android.com/sdk/installing/index.html\">Windows and Linux</a></li>\n<li>MacOS: &nbsp;<code>brew install android-sdk</code></li>\n</ul>\n</li>\n</ul>\n<p><strong>3.</strong>&nbsp;Define the ANDROID_HOME environment variable</p>\n<ul>\n<li>Linux: Add the following line to your&nbsp;<code>~/.bashrc</code> or&nbsp;<code>~/.bash_profile<br></code>\n<pre><code>export ANDROID_HOME=&lt;path_where_you_unpacked_android_sdk&gt;</code></pre>\n</li>\n<li>MacOS: Add the following line to your <code>~/.bashrc</code> or <code>~/.bash_profile<br></code>\n<pre><code>export ANDROID_HOME=/usr/local/opt/android-sdk</code></pre>\n</li>\n<li>Windows: Go to&nbsp;<code>Control Panel &gt; System and Security &gt; System &gt; <br></code><code>Change settings &gt; Advanced &gt; Environment variables &gt; New<br></code><br>When choosing the directory to point the variable to, select the one where the Android SDK was installed, as default it should look something like this:<br><code>C:\\Users\\&lt;user&gt;\\AppData\\Local\\Android\\sdk</code></li>\n</ul>\n<p>&nbsp;</p>\n<p><strong>4.</strong> Make sure your SDK is properly configured</p>\n<p>Launch Android Studio, on the welcome view click on the <code>Configure</code>&nbsp;dropdown and<br>select <code>SDK Manager</code>. Make sure to have installed the packages selected in the screenshots:</p>\n<p><img class=\"post__image--center\" src=\"https://marco-fp.github.io/blog/media/posts/2/sdk-01.JPG\" width=\"632\" height=\"1000\"></p>\n<p><img class=\"post__image--center\" src=\"https://marco-fp.github.io/blog/media/posts/2/sdk-02.JPG\" width=\"632\" height=\"1000\"></p>\n<p><strong>Optional:</strong> Install the React Native Console plugin</p>\n<p>On the welcome view click on the <code>Configure</code> dropdown and select <code>Plugins</code></p>\n<p>You can also access this menu from inside the editor following the menu <br><code>File &gt; Settings &gt; Plugins</code>.</p>\n<p>Select <code>Browse repositories...</code> and search for <code>React Native Console</code>. Install.</p>\n<p>With this plugin you'll be able to run common React Native operations from inside the editor, something <strong>useful</strong> if we're developing on a Windows computer.&nbsp;</p>\n<p>You can check for documentation, usage and report issues at the <a href=\"https://github.com/beansoftapp/react-native-console\">plugin repository</a>.</p>",
            "author": {
                "name": "Marco Fernandez Pranno"
            },
            "tags": [
            ],
            "date_published": "2017-08-15T22:23:00+02:00",
            "date_modified": "2017-08-15T22:22:49+02:00"
        },
        {
            "id": "https://marco-fp.github.io/blog/how-to-setup-react-native.html",
            "url": "https://marco-fp.github.io/blog/how-to-setup-react-native.html",
            "title": "Getting started with React Native",
            "content_html": "<p>&nbsp;</p>\n<p>React Native lets you create mobile applications using the same design as React, with javascript. The result is a native mobile application, identical to one written in Objective-C or Java.&nbsp;</p>\n<p>To accomplish this, React Native renders components that translate into native implementations.</p>\n<p>In addition, we'll be able to re-use native code whenever we need to, as easily as importing the file and rendering it as a component in our React Native view.<br><br></p>\n<hr>\n<p>To speed things up, we'll be using&nbsp;<a href=\"https://github.com/react-community/create-react-native-app\">create-react-native-app</a>, a library that will let us build an application without any configuration.&nbsp;</p>\n<p>(Of course, we could set things up manually, but the configuration of things like hot-reloading and optimized builds is out of the scope of this post)</p>\n<p>To complete this quick guide you'll an Android device and computer with an OS capable of running Node and NPM, connected to the same private network (WLAN/LAN).</p>\n<p>Asuming we already have NPM and Node 6.x installed, follow this steps:</p>\n<p><strong>1.</strong> Install <em>create-react-native-app</em> globally</p>\n<pre>$&gt; npm install -g create-react-native-app</pre>\n<p><img class=\"post__image--center\" src=\"https://marco-fp.github.io/blog/media/posts/1/photo_2017-08-15_00-09-53.jpg\" width=\"2105\" height=\"400\"><br><strong>2.</strong>Initialize and setup the foundation of our first application</p>\n<pre>$&gt; create-react-native-app my-first-app</pre>\n<p><img class=\"post__image--center\" src=\"https://marco-fp.github.io/blog/media/posts/1/photo_2017-08-15_00-09-43.jpg\" width=\"1957\" height=\"900\"><br><img class=\"post__image--center\" src=\"https://marco-fp.github.io/blog/media/posts/1/photo_2017-08-14_23-54-50.jpg\" width=\"1068\" height=\"1026\"><br><strong>3.</strong>Step into the project's directory and run the project</p>\n<pre>$&gt; cd my-first-app/<br>$&gt; yarnpkg start</pre>\n<br><img class=\"post__image--center\" src=\"https://marco-fp.github.io/blog/media/posts/1/photo_2017-08-15_00-10-39.jpg\" width=\"941\" height=\"1280\">\n<p>At this point we'll have our application initialized and running and a QR code will be displayed on the terminal.</p>\n<p>It's time to switch to our Android devise, and install&nbsp;<a href=\"https://expo.io/\">Expo</a>. This application will allow us to scan the QR code and synchronize our development environment with the devise.</p>\n<p>Our application will load and render on the device, while we can enable a debugging tool to open on a browser in the computer.</p>\n<p>Since we have hot-reloading out of the box, making a change on our project's files will automatically result in a change on the devise.<br><br></p>\n<hr>\n<p>If you found this guide useful or have any suggestion, please feel free to share it in the comments.</p>\n<p>Happy Hacking!</p>",
            "author": {
                "name": "Marco Fernandez Pranno"
            },
            "tags": [
                   "react-native",
                   "how-to"
            ],
            "date_published": "2017-08-15T22:23:00+02:00",
            "date_modified": "2017-08-15T21:26:17+02:00"
        }
    ]
}
