<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>undefined-thought</title>
    <link href="https://marco-fp.github.io/blog/feed.xml" rel="self" />
    <link href="https://marco-fp.github.io/blog" />
    <updated>2017-08-15T22:24:52+02:00</updated>
    <author>
        <name>Marco Fernandez Pranno</name>
    </author>
    <id>https://marco-fp.github.io/blog</id>

    <entry>
        <title>Setting up Android Studio for React Native</title>
        <author>
            <name>Marco Fernandez Pranno</name>
        </author>
        <link href="https://marco-fp.github.io/blog/setting-up-android-studio-for-react-native.html"/>
        <id>https://marco-fp.github.io/blog/setting-up-android-studio-for-react-native.html</id>
            <category term="react-native"/>
            <category term="how-to"/>

        <updated>2017-08-15T22:24:46+02:00</updated>
            <summary></summary>
        <content type="html">
            <![CDATA[
                <p>In this post we'll cover the basics to setup a React Native development environment using Android Studio.</p>
<p><strong>1.</strong> Install Git:&nbsp;</p>
<ul>
<li>Windows:&nbsp;<a href="https://git-for-windows.github.io/">Git for Windows</a>. <br>During the installation use the option "Run Git from Windows Command Prompt"</li>
<li>Linux: <a href="https://git-scm.com/download/linux">Using your package manager</a></li>
<li>MacOS: If you have installed XCode, you already have git. <br>In other case, use: <code>$&gt; brew install git</code></li>
</ul>
<p><strong>2.</strong> Install latest Android SDK:</p>
<ul>
<li>Download and install the latest <a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html">JDK</a></li>
<li>Download and install the latest Android SDK
<ul>
<li><a href="https://developer.android.com/sdk/installing/index.html">Windows and Linux</a></li>
<li>MacOS: &nbsp;<code>brew install android-sdk</code></li>
</ul>
</li>
</ul>
<p><strong>3.</strong>&nbsp;Define the ANDROID_HOME environment variable</p>
<ul>
<li>Linux: Add the following line to your&nbsp;<code>~/.bashrc</code> or&nbsp;<code>~/.bash_profile<br></code>
<pre><code>export ANDROID_HOME=&lt;path_where_you_unpacked_android_sdk&gt;</code></pre>
</li>
<li>MacOS: Add the following line to your <code>~/.bashrc</code> or <code>~/.bash_profile<br></code>
<pre><code>export ANDROID_HOME=/usr/local/opt/android-sdk</code></pre>
</li>
<li>Windows: Go to&nbsp;<code>Control Panel &gt; System and Security &gt; System &gt; <br></code><code>Change settings &gt; Advanced &gt; Environment variables &gt; New<br></code><br>When choosing the directory to point the variable to, select the one where the Android SDK was installed, as default it should look something like this:<br><code>C:\Users\&lt;user&gt;\AppData\Local\Android\sdk</code></li>
</ul>
<p>&nbsp;</p>
<p><strong>4.</strong> Make sure your SDK is properly configured</p>
<p>Launch Android Studio, on the welcome view click on the <code>Configure</code>&nbsp;dropdown and<br>select <code>SDK Manager</code>. Make sure to have installed the packages selected in the screenshots:</p>
<p><img class="post__image--center" src="https://marco-fp.github.io/blog/media/posts/2/sdk-01.JPG" width="632" height="1000"></p>
<p><img class="post__image--center" src="https://marco-fp.github.io/blog/media/posts/2/sdk-02.JPG" width="632" height="1000"></p>
<p><strong>Optional:</strong> Install the React Native Console plugin</p>
<p>On the welcome view click on the <code>Configure</code> dropdown and select <code>Plugins</code></p>
<p>You can also access this menu from inside the editor following the menu <br><code>File &gt; Settings &gt; Plugins</code>.</p>
<p>Select <code>Browse repositories...</code> and search for <code>React Native Console</code>. Install.</p>
<p>With this plugin you'll be able to run common React Native operations from inside the editor, something <strong>useful</strong> if we're developing on a Windows computer.&nbsp;</p>
<p>You can check for documentation, usage and report issues at the <a href="https://github.com/beansoftapp/react-native-console">plugin repository</a>.</p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Getting started with React Native</title>
        <author>
            <name>Marco Fernandez Pranno</name>
        </author>
        <link href="https://marco-fp.github.io/blog/how-to-setup-react-native.html"/>
        <id>https://marco-fp.github.io/blog/how-to-setup-react-native.html</id>
            <category term="react-native"/>
            <category term="how-to"/>

        <updated>2017-08-15T21:26:17+02:00</updated>
            <summary></summary>
        <content type="html">
            <![CDATA[
                <p>&nbsp;</p>
<p>React Native lets you create mobile applications using the same design as React, with javascript. The result is a native mobile application, identical to one written in Objective-C or Java.&nbsp;</p>
<p>To accomplish this, React Native renders components that translate into native implementations.</p>
<p>In addition, we'll be able to re-use native code whenever we need to, as easily as importing the file and rendering it as a component in our React Native view.<br><br></p>
<hr>
<p>To speed things up, we'll be using&nbsp;<a href="https://github.com/react-community/create-react-native-app">create-react-native-app</a>, a library that will let us build an application without any configuration.&nbsp;</p>
<p>(Of course, we could set things up manually, but the configuration of things like hot-reloading and optimized builds is out of the scope of this post)</p>
<p>To complete this quick guide you'll an Android device and computer with an OS capable of running Node and NPM, connected to the same private network (WLAN/LAN).</p>
<p>Asuming we already have NPM and Node 6.x installed, follow this steps:</p>
<p><strong>1.</strong> Install <em>create-react-native-app</em> globally</p>
<pre>$&gt; npm install -g create-react-native-app</pre>
<p><img class="post__image--center" src="https://marco-fp.github.io/blog/media/posts/1/photo_2017-08-15_00-09-53.jpg" width="2105" height="400"><br><strong>2.</strong>Initialize and setup the foundation of our first application</p>
<pre>$&gt; create-react-native-app my-first-app</pre>
<p><img class="post__image--center" src="https://marco-fp.github.io/blog/media/posts/1/photo_2017-08-15_00-09-43.jpg" width="1957" height="900"><br><img class="post__image--center" src="https://marco-fp.github.io/blog/media/posts/1/photo_2017-08-14_23-54-50.jpg" width="1068" height="1026"><br><strong>3.</strong>Step into the project's directory and run the project</p>
<pre>$&gt; cd my-first-app/<br>$&gt; yarnpkg start</pre>
<br><img class="post__image--center" src="https://marco-fp.github.io/blog/media/posts/1/photo_2017-08-15_00-10-39.jpg" width="941" height="1280">
<p>At this point we'll have our application initialized and running and a QR code will be displayed on the terminal.</p>
<p>It's time to switch to our Android devise, and install&nbsp;<a href="https://expo.io/">Expo</a>. This application will allow us to scan the QR code and synchronize our development environment with the devise.</p>
<p>Our application will load and render on the device, while we can enable a debugging tool to open on a browser in the computer.</p>
<p>Since we have hot-reloading out of the box, making a change on our project's files will automatically result in a change on the devise.<br><br></p>
<hr>
<p>If you found this guide useful or have any suggestion, please feel free to share it in the comments.</p>
<p>Happy Hacking!</p>
            ]]>
        </content>
    </entry>
</feed>
